
/**
 * Assignment 2 Task 1
 * Flight is a class that represents an airline flight through collecting flight information, including the airline, the flight number, 
 * the origin city, and the destination city from the user 
 * @author Veronica Lin (yl102) 
 * @version 09/28/2021 
 */

import java.util.Scanner;

public class Flight
{
    // instance variables
    private String airline;
    private int flNum;
    private String from;
    private String to; 
    
    /**
     * constructor for objects of class Flight
     * @param airline the airline of the flight, 
     * @param flNum flight number 
     * @param from origin city 
     * @param to destination city 
     * @return nothing (constructor)
     */
    public Flight(String airline, int flNum, String from, String to){
        this.airline = airline;
        this.flNum = flNum;
        this.from = from;
        this.to = to; 
    }
    
    // getter methods
    /**
     * Returns the name of the airline of the flight 
     * 
     * @return the name of the airline of the flight 
     */
    public String getAirline(){
        return airline;
    }
    
    /**
     * Returns the flight number 
     * 
     * @return the flight number 
     */
    public int getFlightNumber(){
        return flNum; 
    }
    
    /**
     * Returns the origin city of the flight
     * 
     * @return the origin city of the flight 
     */
    public String getOrigin(){
        return from;
    }
    
    /**
     * Returns the destination city of the flight
     * 
     * @return the destination city of the flight 
     */
    public String getDestination(){
        return to;
    }
    
    // setter methods
    /**
     * @param newAirline the name of the new airline as String
     */
    public void setAirline(String newAirline){
        airline = newAirline; 
    }
    
    /**
     * @param flightNum the flight number as integer
     */
    public void setFlightNumber(int flightNum){
        flNum = flightNum;
    }
    
    /**
     * @param fromCity the origin city as String 
     */
    public void setOrigin(String fromCity){
        from = fromCity; 
    }
    
    /**
     * @param toCity the destination City as String 
     */
    public void setDestination(String toCity){
        to = toCity; 
    }
    
    /**
     * Returns a boolean value that specifies whether the origin city of f2
     * is the same as the destination city of f1
     * 
     * @param f1 flight object 
     * @param f2 flight object
     * @return a boolean value that specifies whether the origin city of f2
     * is the same as the destination city of f1
     */
    public static boolean stopOver(Flight f1, Flight f2){
        if (f1.to == f2.from){
            return true;
        }
        return false;
    }
    
    /**
     * Returns a string representation of this flight
     * Overrides toString in class java.lang.Object
     * 
     * @return the state of this flight as a string 
     */
    public String toString(){
        return "There is a flight that is from the airline " + airline + " and has the flight number " + flNum + " and is going from " + from + " to " + to;
    }
    
    /**
     * Reads the properies of a Flight
     * Returns a Flight object based on the user's input 
     * 
     * @return a Flight object generated by the userinput 
     * @param s as a Scanner 
     */
    public static Flight readFlight(Scanner s){
        System.out.print("What is the name of the airline? ");
        String newAirline = s.next();
        System.out.print("What is the flight number? ");
        int newFlNum = s.nextInt();
        System.out.print("Where is this flight traveling from? ");
        String newFrom = s.next();
        System.out.print("Where is this flight going to? ");
        String newTo = s.next();
        
        Flight userInput = new Flight(newAirline, newFlNum, newFrom, newTo);
        return userInput;
    }
    
    /** 
     * main() method for testing 
     */
    public static void main(String[] args){
        Flight emirates = new Flight("Emirates", 100, "Saudi Arabia", "Toronto");
        Flight united = new Flight("United", 254, "Singapore", "Boston");
        System.out.println(emirates.to);
        System.out.println(emirates.toString()); 
        System.out.println(stopOver(emirates, united));
        united.setOrigin("Toronto");
        System.out.println(stopOver(emirates, united));
        System.out.println(emirates.getAirline());
        emirates.setFlightNumber(511);
        System.out.println(emirates.getFlightNumber());
        united.setOrigin("Los Angeles");
        united.setDestination("Salt Lake City");
        System.out.println(united.getOrigin());
        System.out.println(united.getDestination());
        
    }
}
