#BlueJ class context
comment0.target=MovieCollection
comment0.text=\n\ Represents\ a\ collection\ of\ Movies.\ \n\ Uses\ a\ LinkedList\ to\ hold\ the\ movie\ objects.\ \n\ Movie\ data\ (title\ and\ test\ results)\ are\ coming\ from\ a\ file\ named\ "nextBechdel_allTests.txt".\ \n\ Data\ regarding\ actors\ who\ participated\ in\ each\ movie\ is\ read\ from\ a\ file\ named\ "nextBechdel_castGender.txt".\ Both\ files\ are\ provided\ in\ the\ "data"\ folder.\n\ \n\ @author\ yl102,\ vs2,\ cl103\n\ @version\ 12/5/2021\n
comment1.params=testsFileName\ castsFileName
comment1.target=MovieCollection(java.lang.String,\ java.lang.String)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ MovieCollection\n
comment10.params=x\ y
comment10.target=java.util.LinkedList\ findAllMoviesPassedOneNotOther(int,\ int)
comment10.text=\n\ Returns\ a\ list\ of\ all\ movies\ that\ passed\ one\ test\ but\ not\ the\ other\ test\n\ \n\ @param\ x\ the\ number\ of\ the\ Bechdel\ test\ of\ interest\n\ @param\ y\ the\ other\ number\ of\ the\ Bechdel\ test\ that\ is\ not\ passed\n\ @return\ A\ linked\ list\ of\ all\ the\ movies\ that\ passed\ x\ but\ not\ y\ test\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\n\ Main\ Method\ for\ testing\n
comment2.params=
comment2.target=java.util.LinkedList\ getMovies()
comment2.text=\n\ Returns\ all\ the\ movies\ in\ a\ LinkedList\n\ \n\ @return\ Linked\ List\ of\ Movie\ Objects\n
comment3.params=
comment3.target=java.util.LinkedList\ getMovieTitles()
comment3.text=\n\ Returns\ the\ titles\ of\ all\ movies\ in\ the\ collection\n\ \n\ @return\ Linked\ List\ of\ titles\ of\ movies\ in\ collection\ \n
comment4.params=
comment4.target=java.util.LinkedList\ getActors()
comment4.text=\n\ Returns\ all\ the\ Actors\ in\ the\ collection\n\ \n\ @return\ Linked\ List\ of\ Actor\ Objects\n
comment5.params=
comment5.target=java.util.LinkedList\ getActorNames()
comment5.text=\n\ \ \ \ \ Returns\ the\ names\ of\ all\ actors\ in\ the\ collection\n\ \ \ \ \ \n\ \ \ \ \ @return\ Linked\ List\ of\ actor\ names\n
comment6.params=
comment6.target=void\ readMovies()
comment6.text=\n\ Reads\ the\ input\ file,\ and\ uses\ its\ first\ column\ (movie\ title)\ to\ create\ all\ movie\ objects.\n
comment7.params=
comment7.target=void\ readCasts()
comment7.text=\n\ Reads\ the\ casts\ for\ each\ movie,\ from\ input\ casts\ file;\ \n\ Assume\ lines\ in\ this\ file\ are\ formatted\ as\ followes\:\ \n\ "MOVIE","ACTOR","CHARACTER_NAME","TYPE","BILLING","GENDER"\ \n\ For\ example\:\ "Trolls","Ricky\ Dillon","Aspen\ Heitz","Supporting","18","Male".\n
comment8.params=n
comment8.target=java.util.LinkedList\ findAllMoviesPassedTestNum(int)
comment8.text=\n\ Returns\ a\ list\ of\ all\ Movies\ that\ pass\ the\ n-th\ Bechdel\ test\n\ \n\ @param\ n\ The\ number\ of\ the\ Bechdel\ test\ of\ interest\n\ @return\ A\ Linked\ List\ of\ all\ the\ movies\ that\ pass\n
comment9.params=x\ y
comment9.target=java.util.LinkedList\ findAllMoviesPassedEither(int,\ int)
comment9.text=\n\ Returns\ a\ list\ of\ all\ movies\ that\ passed\ either\ the\ x\ or\ y\ Bechdel\ test\n\ \n\ @param\ x\ the\ number\ of\ the\ Bechdel\ test\ of\ interest\n\ @param\ y\ the\ other\ number\ of\ the\ Bechdel\ test\ of\ interest\n\ @return\ A\ linked\ list\ of\ all\ the\ movies\ that\ passed\ either\ x\ or\ y\ test\n
numComments=12
